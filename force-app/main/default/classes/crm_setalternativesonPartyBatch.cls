/*
Created By:Supriya Goel
Date:13th june
set alternative on party accounts 

*/

global class crm_setalternativesonPartyBatch implements Database.batchable < sObject > , Database.Stateful {
 String queryString = '';
 public string accid = '';
public String PartyLevelRecordTypeId = '';

 global crm_setalternativesonPartyBatch() {
 
 RecordType[] rtypes = [SELECT Id FROM RecordType Where DeveloperName = 'crm_Party_level_Customer'
    And sObjectType = 'Account'
    Limit 1
   ];
  
   If(rtypes.size() > 0) {
    PartyLevelRecordTypeId = rtypes.get(0).Id;
   }
 
  queryString = 'Select id,Actual_service_alternative__c,Vas_alternative__c,Surcharge_Alternative__c  from Account where RecordTypeId = :PartyLevelRecordTypeId';
 // if (accid != null && accid.length()>0 )
   //queryString = 'Select id,Actual_service_alternative__c,Vas_alternative__c,Surcharge_Alternative__c  from Account where RecordTypeId = :PartyLevelRecordTypeId and id =:accid';

 }

 global Database.QueryLocator start(Database.BatchableContext bcMain) {
  return Database.getQueryLocator(queryString);
 }


 global void execute(Database.BatchableContext BC, List < Account > accList) {

  Set < Id > accids = new Set < Id > ();
  for (Account a: accList) {
   accids.add(a.id);

  }

  Map < id, Id > oppMap = new Map < Id, Id > ();
  Map < id, Id > oppAccountMap = new Map < Id, Id > ();

  List < OpportunityLineItem > allitemlist = [Select id, crm_AccountId__c, Opportunityid, opportunity.New_Service_Group__c, Opportunity.Stagename, Opportunity.crm_Verified_by_Contract_Management__c, Product2.id, Product2.crm_New_Service__c, product2.crm_Service_Type__c, crm_Discount__c, crm_Minimum_Price__c, crm_Min_Weight__c, crm_Max_Weight__c, crm_Unit_Price__c from OpportunityLineItem where crm_AccountId__c in: accids and opportunity.New_Service_Group__c = true and Opportunity.crm_Verified_by_Contract_Management__c = true and Opportunity.Stagename = 'Closed Won'];
  System.debug('allitemlist' + allitemlist);
  Map < Id, List < OpportunityLineItem >> opplinetemsMap = new Map < Id, List < OpportunityLineItem >> ();

  for (OpportunityLineItem lineitem: allitemlist) {
   oppMap.put(lineitem.id, lineitem.Opportunityid);
   oppAccountMap.put(lineitem.Opportunityid, lineitem.crm_AccountId__c);
   if (opplinetemsMap.containsKey(lineitem.opportunityid)) {
    List < OpportunityLineItem > templist = new List < OpportunityLineItem > ();
    templist = opplinetemsMap.get(lineitem.opportunityid);
    templist.add(lineitem);
    opplinetemsMap.put(lineitem.opportunityid, templist);
   } else {
    List < OpportunityLineItem > templist = new List < OpportunityLineItem > ();
    templist.add(lineitem);
    opplinetemsMap.put(lineitem.opportunityid, templist);
   }

  }

  system.debug('@@@opplinetemsMap' + opplinetemsMap);



  Map < id, Map < String, String >> opplineitemoptionMap = new Map < id, Map < String, String >> ();
  //opp1  -> l1 -> AS-> alt3  , l2->. AS -> al2 ,   v1  -> al1 , v2-> alt2 , s1, -> 1, s2-> 2 



  for (String oppid: opplinetemsMap.keyset()) {
   List < OpportunityLineItem > templist = opplinetemsMap.get(oppid);
   Map < String, String > opp_optionMap = new Map < String, String > ();



   for (OpportunityLineItem lineitem: templist) {
    String AS_alternative = '';
    String VAS_alternative = '';
    String Surcharge_alternative = '';

    //check for multiole and mixed bag pending
    system.debug('@@@lineitem.product2.crm_Service_Type__c ' + lineitem.product2.crm_Service_Type__c);
    system.debug('@@@lineitem.crm_Discount__c  ' + lineitem.crm_Discount__c);
    if (lineitem.product2.crm_Service_Type__c == 'Actual Service') {
     if (lineitem.crm_Min_Weight__c != null && lineitem.crm_Max_Weight__c != null && lineitem.crm_Minimum_Price__c != null && lineitem.crm_Discount__c != null) {
      Map < String, String > tempmap = new Map < String, String > ();
      tempmap.put('AS_alternative', 'Alternative3');

      opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);


     } else if (lineitem.crm_Minimum_Price__c != null && lineitem.crm_Discount__c != null) {
      if (opplineitemoptionMap.containskey(oppMap.get(lineitem.id))) {
       Map < String, String > tempmap = opplineitemoptionMap.get(oppMap.get(lineitem.id));
       if (tempmap.containskey('AS_alternative') && tempmap.get('AS_alternative') != 'Alternative3') {
        tempmap.put('AS_alternative', 'Alternative2');
        opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

       }
      } else {
       Map < String, String > tempmap = new Map < String, String > ();  tempmap.put('AS_alternative', 'Alternative2');opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);


      }

     } else if (lineitem.crm_Discount__c != null) {
      if (opplineitemoptionMap.containskey(oppMap.get(lineitem.id))) {
       Map < String, String > tempmap = opplineitemoptionMap.get(oppMap.get(lineitem.id));       if (tempmap.containskey('AS_alternative') && (tempmap.get('AS_alternative') == 'Alternative1')) {        tempmap.put('AS_alternative', 'Alternative1'); opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

       }
      } else {
       Map < String, String > tempmap = new Map < String, String > ();
       tempmap.put('AS_alternative', 'Alternative1');
       opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

      }
     }
     System.debug('@@@opp_optionMap ' + opp_optionMap);
     System.debug('@@@ after as opplineitemoptionMap' + opplineitemoptionMap);
    }




    if (lineitem.product2.crm_Service_Type__c == 'VAS') {
     if (lineitem.crm_Discount__c != null) {

      if (opplineitemoptionMap.containskey(oppMap.get(lineitem.id))) {

       Map < String, String > tempmap = opplineitemoptionMap.get(oppMap.get(lineitem.id));
       System.debug(tempmap);
       if (tempmap.containskey('VAS_alternative') && (tempmap.get('VAS_alternative') != 'Alternative1')) {tempmap.put('VAS_alternative', 'Alternative3');
       } else {
        tempmap.put('VAS_alternative', 'Alternative1');

       }

      } else

      {
       Map < String, String > tempmap = new Map < String, String > (); tempmap.put('VAS_alternative', 'Alternative1');opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);



      }
     }


     if (lineitem.crm_Unit_Price__c != null) {
      if (opplineitemoptionMap.containskey(oppMap.get(lineitem.id))) {
       Map < String, String > tempmap = opplineitemoptionMap.get(oppMap.get(lineitem.id));
       if (tempmap.containskey('VAS_alternative') && (tempmap.get('VAS_alternative') != 'Alternative2')) {
        tempmap.put('VAS_alternative', 'Alternative3');
       } else { tempmap.put('VAS_alternative', 'Alternative2');

       }
       opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

      } else {
       Map < String, String > tempmap = new Map < String, String > ();tempmap.put('VAS_alternative', 'Alternative2'); opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

      }

     }


     System.debug('@@@ after vas opplineitemoptionMap' + opplineitemoptionMap);
    }



    if (lineitem.product2.crm_Service_Type__c == 'Surcharge') {
     if (lineitem.crm_Discount__c != null) {

      if (opplineitemoptionMap.containskey(oppMap.get(lineitem.id))) {

       Map < String, String > tempmap = opplineitemoptionMap.get(oppMap.get(lineitem.id));
       System.debug(tempmap);
       if (tempmap.containskey('Surcharge_alternative') && (tempmap.get('Surcharge_alternative') != 'Alternative1')) { tempmap.put('Surcharge_alternative', 'Alternative3');
       } else {
        tempmap.put('Surcharge_alternative', 'Alternative1');

       }

      } else

      {
       Map < String, String > tempmap = new Map < String, String > ();  tempmap.put('Surcharge_alternative', 'Alternative1'); opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);



      }
     }


     if (lineitem.crm_Unit_Price__c != null) {
      if (opplineitemoptionMap.containskey(oppMap.get(lineitem.id))) {
       Map < String, String > tempmap = opplineitemoptionMap.get(oppMap.get(lineitem.id));
       if (tempmap.containskey('Surcharge_alternative') && (tempmap.get('Surcharge_alternative') != 'Alternative2')) {
        tempmap.put('Surcharge_alternative', 'Alternative3');
       } else {   tempmap.put('Surcharge_alternative', 'Alternative2');

       }
       opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

      } else {
       Map < String, String > tempmap = new Map < String, String > ();  tempmap.put('Surcharge_alternative', 'Alternative2'); opplineitemoptionMap.put(oppMap.get(lineitem.id), tempmap);

      }

     }
     System.debug('@@ after surcharge opplineitemoptionMap' + opplineitemoptionMap);

    }


   } //end of opplineitem for


  } //end if map for



  System.debug('###opplineitemoptionMap' + opplineitemoptionMap);


  Map < id, Map < String, String >> account_optionMap = new Map < id, Map < String, String >> ();


  for (String oppid: opplineitemoptionMap.keyset()) {
   Map < String, String > optionStrMap = new Map < String, String > ();
   Map < String, String > optionStrMaptemp = new Map < String, String > ();
   Map < String, String > accountstrMap = new Map < String, String > ();
   String Accountid = oppAccountMap.get(oppid);

   if (!account_optionMap.containskey(Accountid)) {


    optionStrMap = opplineitemoptionMap.get(oppid);


    if (optionStrMap.containskey('AS_alternative') && optionStrMap.get('AS_alternative') == 'Alternative3') {
     optionStrMaptemp.put('AS_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('AS_alternative') && optionStrMap.get('AS_alternative') == 'Alternative2') {    optionStrMaptemp.put('AS_alternative', 'Alternative2');

    } else if (optionStrMap.containskey('AS_alternative') && optionStrMap.get('AS_alternative') != 'Alternative3' && optionStrMap.get('AS_alternative') != 'Alternative2') {     optionStrMaptemp.put('AS_alternative', 'Alternative1');
    }


    if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') == 'Alternative3') {
     optionStrMaptemp.put('VAS_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') != 'Alternative3') {   optionStrMaptemp.put('VAS_alternative', optionStrMap.get('VAS_alternative'));


    }

    if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') == 'Alternative3') {
     optionStrMaptemp.put('Surcharge_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') != 'Alternative3') { optionStrMaptemp.put('Surcharge_alternative', optionStrMap.get('Surcharge_alternative'));


    }

    System.debug('@@optionStrMaptemp' + optionStrMaptemp);

   } else {
    //check from both 

    accountstrMap = account_optionMap.get(accountid);
    optionStrMap = opplineitemoptionMap.get(oppid);

    system.debug('@@accountstrMap' + accountstrMap);
    system.debug('@@optionStrMap' + optionStrMap);

    if (optionStrMap.containskey('AS_alternative') && !accountstrMap.containskey('AS_alternative')) {     optionStrMaptemp.put('AS_alternative', optionStrMap.get('AS_alternative'));

    } else if (!optionStrMap.containskey('AS_alternative') && accountstrMap.containskey('AS_alternative')) {     optionStrMaptemp.put('AS_alternative', accountstrMap.get('AS_alternative'));

    } else if (optionStrMap.containskey('AS_alternative') && optionStrMap.get('AS_alternative') == 'Alternative3' && accountstrMap.containskey('AS_alternative')) {
     optionStrMaptemp.put('AS_alternative', 'Alternative3');
    } else if (optionStrMap.containskey('AS_alternative') && optionStrMap.get('AS_alternative') == 'Alternative2' && accountstrMap.containskey('AS_alternative') && (accountstrMap.get('AS_alternative') == 'Alternative1' || accountstrMap.get('AS_alternative') == 'Alternative2')) {     optionStrMaptemp.put('AS_alternative', 'Alternative2');

    } else if (optionStrMap.containskey('AS_alternative') && optionStrMap.get('AS_alternative') == 'Alternative1') //&& accountstrMap.containskey('AS_alternative') &&  accountstrMap.get('AS_alternative')!= 'Alternative1' ){     optionStrMaptemp.put('AS_alternative', accountstrMap.get('AS_alternative'));

    if (optionStrMap.containskey('VAS_alternative') && !accountstrMap.containskey('VAS_alternative')) {     optionStrMaptemp.put('VAS_alternative', optionStrMap.get('VAS_alternative'));

    } else if (!optionStrMap.containskey('VAS_alternative') && accountstrMap.containskey('VAS_alternative')) {     optionStrMaptemp.put('VAS_alternative', accountstrMap.get('VAS_alternative'));

    } else if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') == 'Alternative3' && accountstrMap.containskey('VAS_alternative')) {
     optionStrMaptemp.put('VAS_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') == 'Alternative1' && accountstrMap.containskey('VAS_alternative') && accountstrMap.get('VAS_alternative') != 'Alternative1') {     optionStrMaptemp.put('VAS_alternative', 'Alternative3');


    } else if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') == 'Alternative2' && accountstrMap.containskey('VAS_alternative') && accountstrMap.get('VAS_alternative') != 'Alternative2') {     optionStrMaptemp.put('VAS_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') == 'Alternative1' && accountstrMap.containskey('VAS_alternative') && accountstrMap.get('VAS_alternative') == 'Alternative1') {     optionStrMaptemp.put('VAS_alternative', 'Alternative1');
    } else if (optionStrMap.containskey('VAS_alternative') && optionStrMap.get('VAS_alternative') == 'Alternative2' && accountstrMap.containskey('VAS_alternative') && accountstrMap.get('VAS_alternative') == 'Alternative2') {     optionStrMaptemp.put('VAS_alternative', 'Alternative2');
    }

    /////////    

    if (optionStrMap.containskey('Surcharge_alternative') && !accountstrMap.containskey('Surcharge_alternative')) {     optionStrMaptemp.put('Surcharge_alternative', optionStrMap.get('Surcharge_alternative'));

    } else if (!optionStrMap.containskey('Surcharge_alternative') && accountstrMap.containskey('Surcharge_alternative')) {     optionStrMaptemp.put('Surcharge_alternative', accountstrMap.get('Surcharge_alternative'));

    } else if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') == 'Alternative3' && accountstrMap.containskey('Surcharge_alternative')) {
     optionStrMaptemp.put('Surcharge_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') == 'Alternative1' && accountstrMap.containskey('Surcharge_alternative') && accountstrMap.get('Surcharge_alternative') != 'Alternative1') {     optionStrMaptemp.put('Surcharge_alternative', 'Alternative3');


    } else if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') == 'Alternative2' && accountstrMap.containskey('Surcharge_alternative') && accountstrMap.get('Surcharge_alternative') != 'Alternative2') {     optionStrMaptemp.put('Surcharge_alternative', 'Alternative3');

    } else if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') == 'Alternative1' && accountstrMap.containskey('Surcharge_alternative') && accountstrMap.get('Surcharge_alternative') == 'Alternative1') {     optionStrMaptemp.put('Surcharge_alternative', 'Alternative1');
    } else if (optionStrMap.containskey('Surcharge_alternative') && optionStrMap.get('Surcharge_alternative') == 'Alternative2' && accountstrMap.containskey('Surcharge_alternative') && accountstrMap.get('Surcharge_alternative') == 'Alternative2') {     optionStrMaptemp.put('Surcharge_alternative', 'Alternative2');
    }




    System.debug('@@in else optionStrMaptemp' + optionStrMaptemp);

   }
   account_optionMap.put(Accountid, optionStrMaptemp);




  } //end of for 

  System.debug('@@final account_optionMap' + account_optionMap);


  for (Account a: AccList) {

   Map < String, String > optionStrMap = new Map < String, String > ();
   if (account_optionMap.containskey(a.id)) {
    optionStrMap = account_optionMap.get(a.id);
    if (optionStrMap.containskey('AS_alternative'))
     a.Actual_service_alternative__c = optionStrMap.get('AS_alternative');    else      a.Actual_service_alternative__c = '';
    if (optionStrMap.containskey('VAS_alternative'))
     a.Vas_alternative__c = optionStrMap.get('VAS_alternative');    else      a.Vas_alternative__c = '';
    if (optionStrMap.containskey('Surcharge_alternative'))
     a.Surcharge_Alternative__c = optionStrMap.get('Surcharge_alternative');    else      a.Surcharge_Alternative__c = '';
    system.debug('Account values' + a.Actual_service_alternative__c + '' + a.Vas_alternative__c + '' + a.Surcharge_Alternative__c);

   }
  }
  update AccList;


 }


 global void finish(Database.BatchableContext BC) {}




public void countAlternatives(){
Integer i=0;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;
i++;







}
}